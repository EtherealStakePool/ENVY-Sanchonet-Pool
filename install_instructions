cardano-cli-sancho query utxo \
    --address $(cat payment.addr) \
    --testnet-magic 4

cardano-cli-sancho stake-address registration-certificate \
    --stake-verification-key-file stake.vkey \
    --out-file stake.cert

currentSlot=$(cardano-cli-sancho query tip --testnet-magic 4 | jq -r '.slot')
echo Current Slot: $currentSlot

12623857

cardano-cli-sancho query utxo \
    --address $(cat payment.addr) \
    --testnet-magic 4 > fullUtxo.out

tail -n +3 fullUtxo.out | sort -k3 -nr > balance.out

cat balance.out

tx_in=""
total_balance=0
while read -r utxo; do
    type=$(awk '{ print $6 }' <<< "${utxo}")
    if [[ ${type} == 'TxOutDatumNone' ]]
    then
        in_addr=$(awk '{ print $1 }' <<< "${utxo}")
        idx=$(awk '{ print $2 }' <<< "${utxo}")
        utxo_balance=$(awk '{ print $3 }' <<< "${utxo}")
        total_balance=$((${total_balance}+${utxo_balance}))
        echo TxHash: ${in_addr}#${idx}
        echo ADA: ${utxo_balance}
        tx_in="${tx_in} --tx-in ${in_addr}#${idx}"
    fi
done < balance.out
txcnt=$(cat balance.out | wc -l)
echo Total available ADA balance: ${total_balance}
echo Number of UTXOs: ${txcnt}



stakeAddressDeposit=$(cat ./params.json | jq -r '.stakeAddressDeposit')
echo stakeAddressDeposit : $stakeAddressDeposit



cardano-cli-sancho transaction build-raw \
    ${tx_in} \
    --tx-out $(cat payment.addr)+0 \
    --invalid-hereafter $(( ${currentSlot} + 10000)) \
    --fee 0 \
    --out-file tx.tmp \
    --certificate stake.cert


fee=$(cardano-cli-sancho transaction calculate-min-fee \
    --tx-body-file tx.tmp \
    --tx-in-count ${txcnt} \
    --tx-out-count 1 \
    --mainnet \
    --witness-count 2 \
    --byron-witness-count 0 \
    --protocol-params-file params.json | awk '{ print $1 }')
echo fee: $fee


txOut=$((${total_balance}-${stakeAddressDeposit}-${fee}))
echo Change Output: ${txOut}


cardano-cli-sancho transaction build-raw \
    ${tx_in} \
    --tx-out $(cat payment.addr)+${txOut} \
    --invalid-hereafter $(( ${currentSlot} + 10000)) \
    --fee ${fee} \
    --certificate-file stake.cert \
    --out-file tx.raw



cardano-cli-sancho transaction sign \
    --tx-body-file tx.raw \
    --signing-key-file payment.skey \
    --signing-key-file stake.skey \
    --testnet-magic 4 \
    --out-file tx.signed


cardano-cli transaction submit \
    --tx-file tx.signed \
    --testnet-magic 4


cat > poolMetaData.json << EOF
{
"name": "ENVY Sanchonet Pool",
"description": "ENVY Pool on Sanchonet",
"ticker": "ENVY",
"homepage": "https://envystakepool.com"
}
EOF


cardano-cli-sancho stake-pool metadata-hash --pool-metadata-file poolMetaData.json > poolMetaDataHash.txt


cardano-cli-sancho stake-pool metadata-hash --pool-metadata-file <(curl -s -L https://raw.githubusercontent.com/EtherealStakePool/ENVY-Sanchonet-Pool/main/poolMetaData.json)


minPoolCost=$(cat ./params.json | jq -r .minPoolCost)
echo minPoolCost: ${minPoolCost}


cardano-cli-sancho stake-pool registration-certificate \
    --cold-verification-key-file node.vkey \
    --vrf-verification-key-file vrf.vkey \
    --pool-pledge 100000000 \
    --pool-cost 345000000 \
    --pool-margin 0.15 \
    --pool-reward-account-verification-key-file stake.vkey \
    --pool-owner-stake-verification-key-file stake.vkey \
    --testnet-magic 4 \
    --pool-relay-port 6007 \
    --pool-relay-ipv4 168.138.37.117 \
    --metadata-url https://tinyurl.com/2s3nard9 \
    --metadata-hash $(cat poolMetaDataHash.txt) \
    --out-file pool.cert


cardano-cli-sancho stake-address delegation-certificate \
    --stake-verification-key-file stake.vkey \
    --cold-verification-key-file node.vkey \
    --out-file deleg.cert


currentSlot=$(cardano-cli-sancho query tip --testnet-magic 4 | jq -r '.slot')
echo Current Slot: $currentSlot


cardano-cli-sancho query utxo \
    --address $(cat payment.addr) \
    --testnet-magic 4 > fullUtxo.out

tail -n +3 fullUtxo.out | sort -k3 -nr > balance.out

cat balance.out

tx_in=""
total_balance=0
while read -r utxo; do
    type=$(awk '{ print $6 }' <<< "${utxo}")
    if [[ ${type} == 'TxOutDatumNone' ]]
    then
        in_addr=$(awk '{ print $1 }' <<< "${utxo}")
        idx=$(awk '{ print $2 }' <<< "${utxo}")
        utxo_balance=$(awk '{ print $3 }' <<< "${utxo}")
        total_balance=$((${total_balance}+${utxo_balance}))
        echo TxHash: ${in_addr}#${idx}
        echo ADA: ${utxo_balance}
        tx_in="${tx_in} --tx-in ${in_addr}#${idx}"
    fi
done < balance.out
txcnt=$(cat balance.out | wc -l)
echo Total available ADA balance: ${total_balance}
echo Number of UTXOs: ${txcnt}


stakePoolDeposit=$(cat params.json | jq -r '.stakePoolDeposit')
echo stakePoolDeposit: $stakePoolDeposit


cardano-cli-sancho transaction build-raw \
    ${tx_in} \
    --tx-out $(cat payment.addr)+$(( ${total_balance} - ${stakePoolDeposit}))  \
    --invalid-hereafter $(( ${currentSlot} + 10000)) \
    --fee 0 \
    --certificate-file pool.cert \
    --certificate-file deleg.cert \
    --out-file tx.tmp


fee=$(cardano-cli-sancho transaction calculate-min-fee \
    --tx-body-file tx.tmp \
    --tx-in-count ${txcnt} \
    --tx-out-count 1 \
    --testnet-magic 4 \
    --witness-count 3 \
    --byron-witness-count 0 \
    --protocol-params-file params.json | awk '{ print $1 }')
echo fee: $fee


txOut=$((${total_balance}-${stakePoolDeposit}-${fee}))
echo txOut: ${txOut}


cardano-cli-sancho transaction build-raw \
    ${tx_in} \
    --tx-out $(cat payment.addr)+${txOut} \
    --invalid-hereafter $(( ${currentSlot} + 10000)) \
    --fee ${fee} \
    --certificate-file pool.cert \
    --certificate-file deleg.cert \
    --out-file tx.raw


cardano-cli-sancho transaction sign \
    --tx-body-file tx.raw \
    --signing-key-file payment.skey \
    --signing-key-file cold-keys/node.skey \
    --signing-key-file stake.skey \
    --testnet-magic 4 \
    --out-file tx.signed

cardano-cli transaction submit \
    --tx-file tx.signed \
    --testnet-magic 4



cardano-cli-sancho stake-pool id --cold-verification-key-file node.vkey --output-format hex > stakepoolid.txt
cat stakepoolid.txt

cardano-cli query stake-snapshot --stake-pool-id $(cat stakepoolid.txt) --testnet-magic 4
